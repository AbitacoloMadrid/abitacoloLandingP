---
import { Image } from "astro:assets";
import FlechaAbajo from "../../image/home/FlechaAbajo.webp";

interface Hito {
  titulo: string;
  texto: string;
  image: ImageMetadata;
  clases: string;
}

interface Props {
  Hitos: Hito[];
}

const { Hitos = [] } = Astro.props;

// Mapeo de clases condicionales
const hiddenClasses = {
  "max-lg:hidden": "lg:hidden",
  "max-md:hidden": "md:hidden",
  "max-sm:hidden": "sm:hidden",
};
---

<div class="relative text-left xl:hidden px-8">
  <!-- Dropdown menÃº -->
  <div
    class="origin-top-right mt-2 rounded-md shadow-lg ring-1 ring-black ring-opacity-5 divide-y divide-gray-100 hidden space-y-3"
    id="dropdown-menu"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="options-menu"
  >
    {
      Hitos.map((hito, index) => {
        const appliedClass = hiddenClasses[hito.clases] || "";
        return (
          <article
            class={`min-h-72 w-full p-12 bg-white text-[#666666] hover:text-black hover:bg-gray-300 flex flex-col gap-6 -top-5 ${appliedClass}`}
            data-image-src={hito.image.src}
            data-image-srcset={hito.image.src}
          >
            <h2 class="text-2xl font-bold leading-7 text-center">
              {hito.titulo}
            </h2>
            <p class="text-sm leading-tight text-center">{hito.texto}</p>
            <a
              href={`/hitos/articulo-${Hitos.indexOf(hito) + 1}`}
              class="ml-auto mt-auto"
            >
              <button class="rounded-full border-2 border-black h-[37px] w-fit px-2 py-2.5 font-semibold hover:bg-black hover:text-white flex place-items-center">
                Leer articulo
              </button>
            </a>
          </article>
        );
      })
    }
  </div>

  <button
    type="button"
    class="inline-flex justify-center w-full rounded-md border px-4 py-2 text-sm font-medium"
    id="options-menu"
    aria-haspopup="true"
    aria-expanded="false"
  >
    <Image src={FlechaAbajo} alt="Flecha abajo" width={26} height={18} />
  </button>
</div>

<script>
  document
    .querySelector("#options-menu")
    ?.addEventListener("click", function () {
      const menu = document.querySelector("#dropdown-menu");
      const expanded = this.getAttribute("aria-expanded") === "true";
      this.setAttribute("aria-expanded", (!expanded).toString());
      menu?.classList.toggle("hidden");
    });
</script>
